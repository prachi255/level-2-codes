 public TreeNode constructFromPrePost(int[] preorder, int[] postorder) {
        HashMap<Integer,Integer> map=new HashMap<>();
        for(int i=0;i<postorder.length;i++){
            map.put(postorder[i] , i);
        }
        
        TreeNode root=helper(map,preorder,postorder,0,preorder.length-1,0,postorder.length-1);
        
        return root;
    }
    public TreeNode helper( HashMap<Integer,Integer> map, int[] preorder,int[] postorder,int prelo,int prehi,int postlo,int posthi){
        if(prelo>prehi || postlo>posthi){
            return null;
        }
        
        TreeNode node=new TreeNode(preorder[prelo]);
        if(prelo+1<=prehi){
            int sidx=map.get(preorder[prelo+1]);
            int lhs=sidx-postlo+1;
            
            node.left=helper(map,preorder,postorder,prelo+1,prelo+lhs,postlo,sidx);
             node.right=helper(map,preorder,postorder,prelo+lhs+1,prehi,sidx+1,posthi-1);
            
        }
        return node;
        
        
    }
